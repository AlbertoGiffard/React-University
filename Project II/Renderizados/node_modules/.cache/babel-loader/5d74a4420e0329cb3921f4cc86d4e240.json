{"ast":null,"code":"/* const user1 = {\r\n    name: 'Junior Prueba',\r\n    username: 'chunior',\r\n    country: 'Jamaica',\r\n    social: {\r\n        facebook: 'https://fb...',\r\n        twitter: 'https://tw...'\r\n    }\r\n}\r\n\r\nconst saluda = (user) =>{\r\n   /*  const name = user.name;\r\n    const country = user.country; */\n// con ECS6 las dos lineas de arriba significan lo mismo que escribir\n\n/* const { name, country } = user; */\n// la cual indica guardar las constantes name y country de user\n\n/* const { name, social, country } = user;\r\n//aca trae twitter de social\r\nconst { twitter } = social; */\n//ahora cabe resaltar que si lo escribo de la siguiente forma me traera el valor de twitter mas no de social\n\n/* const { name, country, social: { twitter }} = user; */\n// tambien puedo asignar valores como por ejemplo, fijarse en sintaxis que se coloca un =\n\n/* const { name = 'Roberto Test', country, social: { twitter }} = user; \r\n//tambien puedo renombrar las variables que utilizo por ejemplo este aliascool\r\nconst { username: aliasCool, country, social: { twitter: tw }} = user;\r\n  const orden = ['pizza', 'te verde', 'pie', 123, false, 'otro']\r\n//en la siguiente linea cada palabra que escriba indica la posicion en la cual se le esta asignando a cada valor dentro del array\r\n// el elemento spread al final lo que hace es traerme todos los demas valores restantes\r\nconst [ comida, bebida, postre, ...restantes ] = orden\r\nconsole.log(\r\n    `Hola soy ${aliasCool} y me gusta la ${comida}`\r\n);\r\nconsole.log(\r\n    restantes\r\n);\r\n\r\n}\r\nsaluda(user1); */","map":{"version":3,"sources":["C:/Users/alber/OneDrive/Documentos/GitHub/React-University/Project II/Renderizados/src/destructuracion.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;AAaI;;AACA;AACA;;AACA;;;AAGA;;AACA;AACA;;AACA","sourcesContent":["/* const user1 = {\r\n    name: 'Junior Prueba',\r\n    username: 'chunior',\r\n    country: 'Jamaica',\r\n    social: {\r\n        facebook: 'https://fb...',\r\n        twitter: 'https://tw...'\r\n    }\r\n}\r\n\r\nconst saluda = (user) =>{\r\n   /*  const name = user.name;\r\n    const country = user.country; */\r\n    // con ECS6 las dos lineas de arriba significan lo mismo que escribir\r\n    /* const { name, country } = user; */\r\n    // la cual indica guardar las constantes name y country de user\r\n    /* const { name, social, country } = user;\r\n    //aca trae twitter de social\r\n    const { twitter } = social; */\r\n    //ahora cabe resaltar que si lo escribo de la siguiente forma me traera el valor de twitter mas no de social\r\n    /* const { name, country, social: { twitter }} = user; */\r\n    // tambien puedo asignar valores como por ejemplo, fijarse en sintaxis que se coloca un =\r\n    /* const { name = 'Roberto Test', country, social: { twitter }} = user; \r\n    //tambien puedo renombrar las variables que utilizo por ejemplo este aliascool\r\n    const { username: aliasCool, country, social: { twitter: tw }} = user;\r\n\r\n    const orden = ['pizza', 'te verde', 'pie', 123, false, 'otro']\r\n    //en la siguiente linea cada palabra que escriba indica la posicion en la cual se le esta asignando a cada valor dentro del array\r\n    // el elemento spread al final lo que hace es traerme todos los demas valores restantes\r\n    const [ comida, bebida, postre, ...restantes ] = orden\r\n    console.log(\r\n        `Hola soy ${aliasCool} y me gusta la ${comida}`\r\n    );\r\n    console.log(\r\n        restantes\r\n    );\r\n    \r\n}\r\n\r\nsaluda(user1); */"]},"metadata":{},"sourceType":"module"}